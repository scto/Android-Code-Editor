plugins {
    id 'com.android.application'
}

def secrets = System.getenv("KEYSTORE")

if (secrets != null) {
    new File("$projectDir/secrets.properties").text = secrets;
}

def secretsPropertiesFile = file('../secrets.properties')
def secretsProperties = new Properties()

if (secretsPropertiesFile.exists()) {
    secretsProperties.load(new FileInputStream(secretsPropertiesFile))
}

def keyStoreName = secretsProperties.getProperty('keyStoreName')
def keyStorePassword = secretsProperties.getProperty('keyStorePassword')
def shouldSign = keyStorePassword != null

android {
    compileSdk 32
    buildToolsVersion "33.0.2"
    useLibrary 'org.apache.http.legacy'
    namespace "android.code.editor"
    def gitCommitHash = "git rev-parse HEAD".execute().text.trim()

	def getCommitHash = { ->
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine "git", "rev-parse", "--short", "HEAD"
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    defaultConfig {
        applicationId "android.code.editor"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0-Snapshot-" + getCommitHash()
    }
    
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        viewBinding true
    }
    
    signingConfigs {
        release {
            if (shouldSign) {
                storeFile file("../keystore.jks")
                storePassword keyStorePassword
                keyAlias keyStoreName
                keyPassword keyStorePassword
            }
        }
        debug {
            if (shouldSign) {
                storeFile file("../keystore.jks")
                storePassword keyStorePassword
                keyAlias keyStoreName
                keyPassword keyStorePassword
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar", "*.aar"])
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.coordinatorlayout:coordinatorlayout:1.2.0"
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'com.google.code.gson:gson:2.8.7'
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    def editorGroupId = "io.github.Rosemoe.sora-editor"
    implementation platform("$editorGroupId:bom:0.21.1")
    implementation "$editorGroupId:editor"
    implementation "$editorGroupId:language-textmate"
    implementation 'jp.co.cyberagent.android:gpuimage:2.1.0'
    implementation 'jp.wasabeef:glide-transformations:4.3.0'

    implementation project(path:':markdown-viewer')
    implementation project(path:':editor')
    implementation project(path:':treeview')
}
